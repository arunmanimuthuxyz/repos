{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "0bc31e2a",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BP</th>\n",
       "      <th>Chlstrl</th>\n",
       "      <th>Age</th>\n",
       "      <th>Prgnt</th>\n",
       "      <th>AnxtyLH</th>\n",
       "      <th>DrugR</th>\n",
       "      <th>Abc</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>100</td>\n",
       "      <td>150</td>\n",
       "      <td>20</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>120</td>\n",
       "      <td>160</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>110</td>\n",
       "      <td>150</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>100</td>\n",
       "      <td>175</td>\n",
       "      <td>25</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>95</td>\n",
       "      <td>250</td>\n",
       "      <td>36</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>110</td>\n",
       "      <td>200</td>\n",
       "      <td>56</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>120</td>\n",
       "      <td>180</td>\n",
       "      <td>59</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>150</td>\n",
       "      <td>175</td>\n",
       "      <td>45</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>160</td>\n",
       "      <td>185</td>\n",
       "      <td>40</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>125</td>\n",
       "      <td>195</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>135</td>\n",
       "      <td>190</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>165</td>\n",
       "      <td>200</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>145</td>\n",
       "      <td>175</td>\n",
       "      <td>30</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>120</td>\n",
       "      <td>180</td>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>100</td>\n",
       "      <td>180</td>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>100</td>\n",
       "      <td>160</td>\n",
       "      <td>19</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>95</td>\n",
       "      <td>250</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>120</td>\n",
       "      <td>200</td>\n",
       "      <td>30</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>125</td>\n",
       "      <td>240</td>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>130</td>\n",
       "      <td>172</td>\n",
       "      <td>30</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>120</td>\n",
       "      <td>130</td>\n",
       "      <td>35</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>120</td>\n",
       "      <td>140</td>\n",
       "      <td>38</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>125</td>\n",
       "      <td>160</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>115</td>\n",
       "      <td>185</td>\n",
       "      <td>40</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>150</td>\n",
       "      <td>195</td>\n",
       "      <td>65</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>130</td>\n",
       "      <td>175</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>170</td>\n",
       "      <td>200</td>\n",
       "      <td>56</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>145</td>\n",
       "      <td>210</td>\n",
       "      <td>58</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>180</td>\n",
       "      <td>200</td>\n",
       "      <td>81</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>140</td>\n",
       "      <td>190</td>\n",
       "      <td>73</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     BP  Chlstrl  Age  Prgnt  AnxtyLH  DrugR  Abc\n",
       "0   100      150   20      0        0      0  1.0\n",
       "1   120      160   16      0        0      0  2.0\n",
       "2   110      150   18      0        0      0  1.0\n",
       "3   100      175   25      0        0      0  2.0\n",
       "4    95      250   36      0        0      0  1.0\n",
       "5   110      200   56      0        1      0  2.0\n",
       "6   120      180   59      0        1      0  NaN\n",
       "7   150      175   45      0        1      0  NaN\n",
       "8   160      185   40      0        1      0  NaN\n",
       "9   125      195   20      1        0      0  NaN\n",
       "10  135      190   18      1        0      0  NaN\n",
       "11  165      200   25      1        0      0  NaN\n",
       "12  145      175   30      1        0      0  NaN\n",
       "13  120      180   28      1        0      0  NaN\n",
       "14  100      180   21      1        0      0  NaN\n",
       "15  100      160   19      1        0      1  NaN\n",
       "16   95      250   18      1        0      1  NaN\n",
       "17  120      200   30      1        0      1  NaN\n",
       "18  125      240   29      1        0      1  NaN\n",
       "19  130      172   30      1        0      1  NaN\n",
       "20  120      130   35      1        1      1  NaN\n",
       "21  120      140   38      1        1      1  NaN\n",
       "22  125      160   32      1        1      1  NaN\n",
       "23  115      185   40      1        1      1  NaN\n",
       "24  150      195   65      0        1      1  NaN\n",
       "25  130      175   72      0        1      1  NaN\n",
       "26  170      200   56      0        1      1  NaN\n",
       "27  145      210   58      0        1      1  NaN\n",
       "28  180      200   81      0        1      1  NaN\n",
       "29  140      190   73      0        1      1  NaN"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "df=pd.read_csv(\"C:/Users/amanimuthu/Documents/Python/cs2m.csv\")\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "b39bf583",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BP</th>\n",
       "      <th>Chlstrl</th>\n",
       "      <th>Age</th>\n",
       "      <th>Prgnt</th>\n",
       "      <th>AnxtyLH</th>\n",
       "      <th>DrugR</th>\n",
       "      <th>Abc</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>100</td>\n",
       "      <td>150</td>\n",
       "      <td>20</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>120</td>\n",
       "      <td>160</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>110</td>\n",
       "      <td>150</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>100</td>\n",
       "      <td>175</td>\n",
       "      <td>25</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>95</td>\n",
       "      <td>250</td>\n",
       "      <td>36</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>110</td>\n",
       "      <td>200</td>\n",
       "      <td>56</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>120</td>\n",
       "      <td>180</td>\n",
       "      <td>59</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>150</td>\n",
       "      <td>175</td>\n",
       "      <td>45</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>160</td>\n",
       "      <td>185</td>\n",
       "      <td>40</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>125</td>\n",
       "      <td>195</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>135</td>\n",
       "      <td>190</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>165</td>\n",
       "      <td>200</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>145</td>\n",
       "      <td>175</td>\n",
       "      <td>30</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>120</td>\n",
       "      <td>180</td>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>100</td>\n",
       "      <td>180</td>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>100</td>\n",
       "      <td>160</td>\n",
       "      <td>19</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>95</td>\n",
       "      <td>250</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>120</td>\n",
       "      <td>200</td>\n",
       "      <td>30</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>125</td>\n",
       "      <td>240</td>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>130</td>\n",
       "      <td>172</td>\n",
       "      <td>30</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>120</td>\n",
       "      <td>130</td>\n",
       "      <td>35</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>120</td>\n",
       "      <td>140</td>\n",
       "      <td>38</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>125</td>\n",
       "      <td>160</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>115</td>\n",
       "      <td>185</td>\n",
       "      <td>40</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>150</td>\n",
       "      <td>195</td>\n",
       "      <td>65</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>130</td>\n",
       "      <td>175</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>170</td>\n",
       "      <td>200</td>\n",
       "      <td>56</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>145</td>\n",
       "      <td>210</td>\n",
       "      <td>58</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>180</td>\n",
       "      <td>200</td>\n",
       "      <td>81</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>140</td>\n",
       "      <td>190</td>\n",
       "      <td>73</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     BP  Chlstrl  Age  Prgnt  AnxtyLH  DrugR  Abc\n",
       "0   100      150   20      0        0      0  1.0\n",
       "1   120      160   16      0        0      0  2.0\n",
       "2   110      150   18      0        0      0  1.0\n",
       "3   100      175   25      0        0      0  2.0\n",
       "4    95      250   36      0        0      0  1.0\n",
       "5   110      200   56      0        1      0  2.0\n",
       "6   120      180   59      0        1      0  NaN\n",
       "7   150      175   45      0        1      0  NaN\n",
       "8   160      185   40      0        1      0  NaN\n",
       "9   125      195   20      1        0      0  NaN\n",
       "10  135      190   18      1        0      0  NaN\n",
       "11  165      200   25      1        0      0  NaN\n",
       "12  145      175   30      1        0      0  NaN\n",
       "13  120      180   28      1        0      0  NaN\n",
       "14  100      180   21      1        0      0  NaN\n",
       "15  100      160   19      1        0      1  NaN\n",
       "16   95      250   18      1        0      1  NaN\n",
       "17  120      200   30      1        0      1  NaN\n",
       "18  125      240   29      1        0      1  NaN\n",
       "19  130      172   30      1        0      1  NaN\n",
       "20  120      130   35      1        1      1  NaN\n",
       "21  120      140   38      1        1      1  NaN\n",
       "22  125      160   32      1        1      1  NaN\n",
       "23  115      185   40      1        1      1  NaN\n",
       "24  150      195   65      0        1      1  NaN\n",
       "25  130      175   72      0        1      1  NaN\n",
       "26  170      200   56      0        1      1  NaN\n",
       "27  145      210   58      0        1      1  NaN\n",
       "28  180      200   81      0        1      1  NaN\n",
       "29  140      190   73      0        1      1  NaN"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "df=pd.read_csv(\"C:/Users/amanimuthu/Documents/Python/cs2m.csv\")\n",
    "plt.plot('BP', data=df)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "4aa36fb4",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BP</th>\n",
       "      <th>Chlstrl</th>\n",
       "      <th>Age</th>\n",
       "      <th>Prgnt</th>\n",
       "      <th>AnxtyLH</th>\n",
       "      <th>DrugR</th>\n",
       "      <th>Abc</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>100</td>\n",
       "      <td>150</td>\n",
       "      <td>20</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>120</td>\n",
       "      <td>160</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>110</td>\n",
       "      <td>150</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>100</td>\n",
       "      <td>175</td>\n",
       "      <td>25</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>95</td>\n",
       "      <td>250</td>\n",
       "      <td>36</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>110</td>\n",
       "      <td>200</td>\n",
       "      <td>56</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>120</td>\n",
       "      <td>180</td>\n",
       "      <td>59</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>150</td>\n",
       "      <td>175</td>\n",
       "      <td>45</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>160</td>\n",
       "      <td>185</td>\n",
       "      <td>40</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>125</td>\n",
       "      <td>195</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>135</td>\n",
       "      <td>190</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>165</td>\n",
       "      <td>200</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>145</td>\n",
       "      <td>175</td>\n",
       "      <td>30</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>120</td>\n",
       "      <td>180</td>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>100</td>\n",
       "      <td>180</td>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>100</td>\n",
       "      <td>160</td>\n",
       "      <td>19</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>95</td>\n",
       "      <td>250</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>120</td>\n",
       "      <td>200</td>\n",
       "      <td>30</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>125</td>\n",
       "      <td>240</td>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>130</td>\n",
       "      <td>172</td>\n",
       "      <td>30</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>120</td>\n",
       "      <td>130</td>\n",
       "      <td>35</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>120</td>\n",
       "      <td>140</td>\n",
       "      <td>38</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>125</td>\n",
       "      <td>160</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>115</td>\n",
       "      <td>185</td>\n",
       "      <td>40</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>150</td>\n",
       "      <td>195</td>\n",
       "      <td>65</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>130</td>\n",
       "      <td>175</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>170</td>\n",
       "      <td>200</td>\n",
       "      <td>56</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>145</td>\n",
       "      <td>210</td>\n",
       "      <td>58</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>180</td>\n",
       "      <td>200</td>\n",
       "      <td>81</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>140</td>\n",
       "      <td>190</td>\n",
       "      <td>73</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     BP  Chlstrl  Age  Prgnt  AnxtyLH  DrugR  Abc\n",
       "0   100      150   20      0        0      0  1.0\n",
       "1   120      160   16      0        0      0  2.0\n",
       "2   110      150   18      0        0      0  1.0\n",
       "3   100      175   25      0        0      0  2.0\n",
       "4    95      250   36      0        0      0  1.0\n",
       "5   110      200   56      0        1      0  2.0\n",
       "6   120      180   59      0        1      0  NaN\n",
       "7   150      175   45      0        1      0  NaN\n",
       "8   160      185   40      0        1      0  NaN\n",
       "9   125      195   20      1        0      0  NaN\n",
       "10  135      190   18      1        0      0  NaN\n",
       "11  165      200   25      1        0      0  NaN\n",
       "12  145      175   30      1        0      0  NaN\n",
       "13  120      180   28      1        0      0  NaN\n",
       "14  100      180   21      1        0      0  NaN\n",
       "15  100      160   19      1        0      1  NaN\n",
       "16   95      250   18      1        0      1  NaN\n",
       "17  120      200   30      1        0      1  NaN\n",
       "18  125      240   29      1        0      1  NaN\n",
       "19  130      172   30      1        0      1  NaN\n",
       "20  120      130   35      1        1      1  NaN\n",
       "21  120      140   38      1        1      1  NaN\n",
       "22  125      160   32      1        1      1  NaN\n",
       "23  115      185   40      1        1      1  NaN\n",
       "24  150      195   65      0        1      1  NaN\n",
       "25  130      175   72      0        1      1  NaN\n",
       "26  170      200   56      0        1      1  NaN\n",
       "27  145      210   58      0        1      1  NaN\n",
       "28  180      200   81      0        1      1  NaN\n",
       "29  140      190   73      0        1      1  NaN"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "df=pd.read_csv(\"C:/Users/amanimuthu/Documents/Python/cs2m.csv\")\n",
    "plt.plot('BP', data=df)\n",
    "plt.plot('Age', data=df,color=\"red\")\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "272836ad",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<BarContainer object of 30 artists>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.bar(\"BP\",\"Age\",data=df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "3909a317",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([6., 2., 7., 3., 3., 3., 2., 1., 2., 1.]),\n",
       " array([ 95. , 103.5, 112. , 120.5, 129. , 137.5, 146. , 154.5, 163. ,\n",
       "        171.5, 180. ]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(\"BP\",data=df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "634e02b7",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.bar(\"BP\",\"Age\",data=df,color='yellow')\n",
    "plt.title(\"BP according to age\")\n",
    "plt.legend(\"bp\")\n",
    "plt.xlabel(\"BP\")\n",
    "plt.ylabel(\"Age\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "eefa1884",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(\"Chlstrl\",data=df,color=\"Red\")\n",
    "plt.title(\"Chlstrl_Distribution\")\n",
    "plt.legend(\"Chlstrl\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "73584ea3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x504 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from matplotlib import pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "#Creating dataset\n",
    "cars=['AUDI','BMW','FORD','TESLA','JAGUAR','MERCEDES']\n",
    "data=[23,17,35,29,12,41]\n",
    "\n",
    "#creating plot\n",
    "fig=plt.figure(figsize=(7,7))\n",
    "plt.pie(data,labels=cars)\n",
    "\n",
    "#show plot\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "cefe05c7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "#Creating dataset\n",
    "cars=['AUDI','BMW','FORD','TESLA','JAGUAR','MERCEDES']\n",
    "data=[23,17,35,29,12,41]\n",
    "\n",
    "#creating explode data\n",
    "explode =(0.1,0.0,0.2,0.3,0.0,0.0)\n",
    "\n",
    "#creating color parameters\n",
    "colors=(\"orange\",\"cyan\",\"brown\",\"grey\",\"indigo\",\"beige\")\n",
    " \n",
    "#Wedge properties\n",
    "wp={'linewidth':1,'edgecolor':\"green\"}\n",
    "\n",
    "#creating autocpt arguments\n",
    "def func(pct,allvalues):\n",
    "    absolute=int(pct/100.*np.sum(allvalues))\n",
    "    return \"{:.1f}%\\n{:d} g)\".format(pct,absolute)\n",
    "\n",
    "#creating plot\n",
    "fig, ax=plt.subplots(figsize=(10,7))\n",
    "wedges,texts,autotexts=ax.pie(data,\n",
    "                              autopct=lambda pct:func(pct,data),\n",
    "                              explode=explode,\n",
    "                              labels=cars,\n",
    "                              shadow=True,\n",
    "                              colors=colors,\n",
    "                              startangle=90,\n",
    "                              wedgeprops=wp,\n",
    "                              textprops=dict(color=\"magenta\"))\n",
    "\n",
    "#Adding legend\n",
    "ax.legend(wedges,cars,title=\"Cars\",loc=\"center left\",bbox_to_anchor=(1,0,0.5,1))\n",
    "plt.setp(autotexts,size=8,weight=\"bold\")\n",
    "ax.set_title(\"Customizing pie chart\")\n",
    "\n",
    "#show plot\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "7c16d136",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Arun Manimuthu\\nDeloitte\\nData Engineer\\n8825975729'"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sd=open('File_Handling.txt','r')\n",
    "sd.read()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "b52ef18a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<function TextIOWrapper.read(size=-1, /)>"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sd=open('File_Handling.txt','w')\n",
    "sd.read"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "222a25c4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<_io.TextIOWrapper name='New_File' mode='w' encoding='cp1252'>\n",
      "<_io.TextIOWrapper name='File_Handling.txt' mode='w' encoding='cp1252'>\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<function TextIOWrapper.read(size=-1, /)>"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sd1=open('New_File','w')\n",
    "sd1.write('Python File Handling')\n",
    "sd1.close()\n",
    "print(sd1)\n",
    "print(sd)\n",
    "sd1.read"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "9fdea17f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Python File Handling'"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sd1=open('New_File','r')\n",
    "sd1.read()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "441bd3af",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter a Name: Johny\n",
      "Enter a Name: Jacky\n",
      "Enter a Name: Jimmy\n",
      "Enter a Name: Julie\n",
      "Enter a Name: June\n"
     ]
    }
   ],
   "source": [
    "file_name=\"example_file.txt\"\n",
    "f=open('example_file.txt','a')\n",
    "\n",
    "for i in range(0,5):\n",
    "    name=input(\"Enter a Name: \")\n",
    "    f.write(name)\n",
    "f.close()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "b6c14442",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter a Name: Johny\n",
      "Enter a Name: Jacky\n",
      "Enter a Name: Jimmy\n",
      "Enter a Name: Julie\n",
      "Enter a Name: June\n"
     ]
    }
   ],
   "source": [
    "file_name=\"example1_file.txt\"\n",
    "f=open('example1_file.txt','a')\n",
    "\n",
    "for i in range(0,5):\n",
    "    name=input(\"Enter a Name: \")\n",
    "    f.write(name+\"\\n\")\n",
    "f.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "69cd1b56",
   "metadata": {},
   "outputs": [],
   "source": [
    "file2=open(\"myfile.txt\",\"w\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "e514d915",
   "metadata": {},
   "outputs": [],
   "source": [
    "L=[\"This is Delhi \\n\",\"This is Paris \\n\",\"This is London\"]\n",
    "file2.writelines(L)\n",
    "file2.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "d3442ab9",
   "metadata": {},
   "outputs": [],
   "source": [
    "file2=open(\"myfile.txt\",\"a\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "63ac8576",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "8"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "file2.write(\"\\n\")\n",
    "file2.write(\"Today\")\n",
    "file2.write(\"Tomorrow\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "422028eb",
   "metadata": {},
   "outputs": [],
   "source": [
    "file2=open(\"myfile.txt\",\"r\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "83e524b2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "output of readlines after appending\n",
      "This is Delhi \n",
      "This is Paris \n",
      "This is London\n",
      "TodayTomorrow\n",
      "TodayTomorrow\n",
      "TodayTomorrow\n",
      "TodayTomorrow\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(\"output of readlines after appending\")\n",
    "print(file2.read())\n",
    "print()\n",
    "file2.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "edab39a6",
   "metadata": {},
   "outputs": [],
   "source": [
    "file2=open(\"myfile1.txt\",\"w\")\n",
    "L=[\"This is Delhi \\n\",\"This is Paris \\n\",\"This is London\"]\n",
    "file2.writelines(L)\n",
    "file2.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "ed5ded38",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "8"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "file2=open(\"myfile1.txt\",\"a\")\n",
    "file2.write(\"\\n\")\n",
    "file2.write(\"Today\")\n",
    "file2.write(\"Tomorrow\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "76e5fce2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "output of readlines after appending\n",
      "This is Delhi \n",
      "This is Paris \n",
      "This is London\n",
      "TodayTomorrow\n",
      "\n"
     ]
    }
   ],
   "source": [
    "file2=open(\"myfile1.txt\",\"r\")\n",
    "print(\"output of readlines after appending\")\n",
    "print(file2.read())\n",
    "print()\n",
    "file2.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "c2383c79",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ello, Wor\n"
     ]
    }
   ],
   "source": [
    "b=\"Hello, World!\"\n",
    "print(b[1:10])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "6a7509ac",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Python programPython programPython program\n"
     ]
    }
   ],
   "source": [
    "str='Python program'\n",
    "print(str*3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "69780986",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ArunArunArunArun\n"
     ]
    }
   ],
   "source": [
    "sd='Arun'\n",
    "print(sd*4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "46e78aa1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "prprpr\n"
     ]
    }
   ],
   "source": [
    "str='Python program'\n",
    "print(str[7:9]*3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "c6656129",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Not found\n"
     ]
    }
   ],
   "source": [
    "if 'Alex' == 'Alex ':\n",
    "   print(\"Hello Alex!\")\n",
    "else:\n",
    "   print(\"Not found\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "b1365a5d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Chris Gayle \n",
      " Chris Gayle\n",
      "Chris Gayle\n"
     ]
    }
   ],
   "source": [
    "name=' Chris Gayle '\n",
    "#remove spaces from left\n",
    "print(name.lstrip())\n",
    "\n",
    "#remove spaces from right\n",
    "print(name.rstrip())\n",
    "\n",
    "#remove spaces from both side\n",
    "print(name.strip())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "185eb195",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There is inform\n"
     ]
    }
   ],
   "source": [
    "import re \n",
    "if re.search(\"inform\",\"we need to inform him with latest information\"):\n",
    "   print(\"There is inform\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "8938198b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "allinform=len(re.findall(\"inform\",\"we need to inform him with latest information\"))\n",
    "allinform"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "145b03f1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "inform\n",
      "inform\n"
     ]
    }
   ],
   "source": [
    "allinform =(re.findall(\"inform\",\"we need to inform him with the latest information\"))\n",
    "for i in allinform:\n",
    " print(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "370082b8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<re.Match object; span=(49, 51), match='17'>\n",
      "17\n",
      "<re.Match object; span=(53, 55), match='19'>\n",
      "19\n",
      "<re.Match object; span=(55, 57), match='93'>\n",
      "93\n",
      "<re.Match object; span=(70, 72), match='11'>\n",
      "11\n",
      "<re.Match object; span=(108, 110), match='26'>\n",
      "26\n"
     ]
    }
   ],
   "source": [
    "import re\n",
    "target_string=\"Emma is a basketball player who was born on June 17, 1993. She played 112 matches with a scoring average of 26.\"\n",
    "#finditer() with regex pattern and target string\n",
    "#\\d{2} to match two consecutive digits\n",
    "result=re.finditer(r\"\\d{2}\",target_string)\n",
    "\n",
    "#print all match object\n",
    "for match_obj in result:\n",
    "    #print each re.Match object\n",
    "    print(match_obj)\n",
    "    \n",
    "    #extract each matching number\n",
    "    print(match_obj.group())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "84eb02e5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['My', 'name', 'is', 'maximums', 'and', 'my', 'luck', 'numbers', 'are', '12', '45', '78']\n"
     ]
    }
   ],
   "source": [
    "import re\n",
    "target_string=\"My name is maximums and my luck numbers are 12 45 78\"\n",
    "#split on white-space\n",
    "word_list=re.split(r\"\\s\",target_string)\n",
    "print(word_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6144790a",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
